[
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      "space f e": "workspace::ToggleLeftDock",
      "space f f": "file_finder::Toggle",
      "space f g": "workspace::NewSearch",
      "space f d": "diagnostics::Deploy",
      "space g t": "git_panel::ToggleFocus",
      "space s a": "editor::SelectAllMatches",
      "space z f": "zed::ToggleFullScreen",
      "space z z": "workspace::ToggleCenteredLayout"
    }
  },
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      "space f e": "workspace::ToggleLeftDock",
      "space f f": "file_finder::Toggle",
      "space f p": "projects::OpenRecent"
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      "space c a": "editor::ToggleCodeActions",
      "space c r": "editor::Rename",
      "ctrl-w h": "workspace::ActivatePaneLeft",
      "ctrl-w j": "workspace::ActivatePaneDown",
      "ctrl-w k": "workspace::ActivatePaneUp",
      "ctrl-w l": "workspace::ActivatePaneRight",
      "ctrl-w /": "pane::SplitRight",
      "ctrl-w -": "pane::SplitDown",
      "g d": "editor::GoToDefinition",
      "g D": "editor::GoToDefinitionSplit",
      "g i": "editor::GoToImplementation",
      "g I": "editor::GoToImplementationSplit",
      "g t": "editor::GoToTypeDefinition",
      "g T": "editor::GoToTypeDefinitionSplit",
      "g r": "editor::FindAllReferences"
    }
  },
  {
    "context": "VimControl && !menu",
    "bindings": {
      // Put key bindings here if you want them to work in normal & visual mode.
    }
  },
  {
    "context": "vim_mode == normal && !menu",
    "bindings": {
      // "shift-y": ["workspace::SendKeystrokes", "y $"] // Use neovim's yank behavior: yank to end of line.
    }
  },
  {
    "context": "vim_mode == insert",
    "bindings": {
      "j k": "vim::NormalBefore" // In insert mode, make jk escape to normal mode.
    }
  },
  {
    "context": "VimControl && !menu && vim_mode != operator",
    "bindings": {
      "w": "vim::NextSubwordStart",
      "b": "vim::PreviousSubwordStart",
      "e": "vim::NextSubwordEnd",
      "g e": "vim::PreviousSubwordEnd"
    }
  }
]
